import pandas as pd
import numpy as np

# 手动创建 JSON 格式的数据
data_dict = {
    "地区": ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K"],
    "燃料成本": [0.4511, 0.4530, 0.4522, 0.4737, 0.4530, 0.4974, 0.5505, 0.5111, 0.5211, 0.5111, 0.5101],
    "网损率": [0.7408, 0.7543, 0.8019, 0.7743, 0.7772, 0.7772, 0.7867, 0.7980, 0.7970, 0.7807, 0.8171],
    "新能源利用率": [0.9994, 0.9989, 0.9984, 0.9983, 0.9955, 0.9988, 0.9972, 0.9951, 0.9972, 0.9755, 0.9984],
    "能源互补性": [0.2138, 0.1739, 0.2472, 0.1535, 0.2032, 0.2148, 0.2392, 0.2738, 0.1890, 0.1723, 0.1986],
    "峰谷差率": [0.4784, 0.3977, 0.4358, 0.4358, 0.3916, 0.4654, 0.4654, 0.4518, 0.4194, 0.4518, 0.4356],
    "电压波动率": [0.9929, 0.9518, 0.9538, 0.9469, 0.9520, 0.9308, 0.9259, 0.9225, 0.9336, 0.9246, 0.9764],
    "新能源出力占比": [0.1203, 0.1125, 0.0918, 0.0138, 0.0454, 0.0278, 0.0542, 0.0432, 0.0334, 0.0568, 0.0346],
    "碳排放量": [0.7657, 0.8099, 0.8718, 0.8519, 0.8395, 0.8365, 0.8559, 0.8395, 0.8263, 0.8359, 0.8090],
    "新能源波动性": [0.9985, 0.9979, 0.9982, 0.9985, 0.9990, 0.9993, 0.9991, 0.9985, 0.9857, 0.9860, 0.9864]
}

# 将 JSON 数据加载为 Pandas DataFrame
data = pd.DataFrame(data_dict)

# 移除第一列（地区），仅保留数值列
data2 = data.iloc[:, 1:].values.astype(np.float64)

# 计算统计量和权重
mean_values = np.mean(data2, axis=0)
std_values = np.std(data2, axis=0)
cv = std_values / mean_values
cv = np.where(mean_values == 0, 0, cv)
cv_sum = cv.sum()
weights = cv / cv_sum

print("均值：", mean_values)
print("标准差：", std_values)
print("变异系数：", cv)
print("权重：", weights)

def calculate_A_sqrt_for_rows(data, weights):
    A_squares = np.sum((data * weights) ** 2, axis=1)
    A_sqrts = np.sqrt(A_squares)
    return A_sqrts

# 调用函数
A_sqrts = calculate_A_sqrt_for_rows(data2, weights)
print(f"每个样本的综合评分值A开平方后的结果为: {A_sqrts}")

